kind: pipeline 
name: terraform-ec2-autoscaling

steps:
- name: docker build
  image: centos:latest
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: AWS_ACCESS_KEY_ID
    AWS_SECRET_ACCESS_KEY:
      from_secret: AWS_SECRET_ACCESS_KEY
  commands: 
    - yum install epel-release -y && yum clean all
    - yum install python-pip -y && yum clean all
    - yum -y install --enablerepo="epel" python-pip && yum clean all 
    - pip install awscli 
    - aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 132818155912.dkr.ecr.us-east-1.amazonaws.com 
    - docker build -t terradorm-multi-cloud-repository . 
    - docker tag terradorm-multi-cloud-repository:latest 132818155912.dkr.ecr.us-east-1.amazonaws.com/terradorm-multi-cloud-repository:latest 
    - docker push 132818155912.dkr.ecr.us-east-1.amazonaws.com/terradorm-multi-cloud-repository:latest
  when:
    event:
      - pull_request
      - push
- name: terragrunt init
  image: alpine:latest
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: AWS_ACCESS_KEY_ID
    AWS_SECRET_ACCESS_KEY:
      from_secret: AWS_SECRET_ACCESS_KEY
  commands: 
    - /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
    - test -d ~/.linuxbrew && eval $(~/.linuxbrew/bin/brew shellenv) 
    - test -d /home/linuxbrew/.linuxbrew && eval $(/home/linuxbrew/.linuxbrew/bin/brew shellenv) 
    - test -r ~/.bash_profile && echo "eval \$($(brew --prefix)/bin/brew shellenv)" >>~/.bash_profile 
    - echo "eval \$($(brew --prefix)/bin/brew shellenv)" >>~/.profile
    - cd eks_cluster/
    - terragrunt run-all init
  when:
    event:
      - pull_request
      - push
- name: terragrunt plan
  image: alpine:latest
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: AWS_ACCESS_KEY_ID
    AWS_SECRET_ACCESS_KEY:
      from_secret: AWS_SECRET_ACCESS_KEY
  commands: 
    - /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
    - test -d ~/.linuxbrew && eval $(~/.linuxbrew/bin/brew shellenv) 
    - test -d /home/linuxbrew/.linuxbrew && eval $(/home/linuxbrew/.linuxbrew/bin/brew shellenv) 
    - test -r ~/.bash_profile && echo "eval \$($(brew --prefix)/bin/brew shellenv)" >>~/.bash_profile 
    - echo "eval \$($(brew --prefix)/bin/brew shellenv)" >>~/.profile
    - cd eks_cluster/
    - terragrunt run-all plan
  when:
    event:
      - pull_request
      - push
- name: terragrunt apply
  image: alpine:latest
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: AWS_ACCESS_KEY_ID
    AWS_SECRET_ACCESS_KEY:
      from_secret: AWS_SECRET_ACCESS_KEY
  commands: 
    - /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
    - test -d ~/.linuxbrew && eval $(~/.linuxbrew/bin/brew shellenv) 
    - test -d /home/linuxbrew/.linuxbrew && eval $(/home/linuxbrew/.linuxbrew/bin/brew shellenv) 
    - test -r ~/.bash_profile && echo "eval \$($(brew --prefix)/bin/brew shellenv)" >>~/.bash_profile 
    - echo "eval \$($(brew --prefix)/bin/brew shellenv)" >>~/.profile
    - cd eks_cluster/
    - terragrunt run-all apply
  when:
    event:
      - pull_request
      - push

- name: kubernetes deploy
  image: centos:latest
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: AWS_ACCESS_KEY_ID
    AWS_SECRET_ACCESS_KEY:
      from_secret: AWS_SECRET_ACCESS_KEY
  commands: 
    - yum install epel-release -y && yum clean all
    - yum install python-pip -y && yum clean all
    - yum -y install --enablerepo="epel" python-pip && yum clean all 
    - cd eks_cluster/tf_eks_cluster/
    - curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl" 
    - curl -LO "https://dl.k8s.io/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl.sha256" 
    - echo "$(<kubectl.sha256) kubectl" | sha256sum --check 
    - wget https://releases.hashicorp.com/terraform/0.14.5/terraform_0.14.5_linux_amd64.zip 
    - unzip terraform_0.14.5_linux_amd64.zip 
    - pip install awscli 
    - aws eks --region $(terraform output -raw region) update-kubeconfig --name $(terraform output -raw cluster_name) 
    - kubectl apply -f ./